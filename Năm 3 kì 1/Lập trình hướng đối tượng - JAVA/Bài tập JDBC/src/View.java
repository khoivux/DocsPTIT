import java.sql.SQLException;
import java.util.ArrayList;

import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

public class View extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public View() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        danhSach = new javax.swing.JTable();
        txtLop = new javax.swing.JTextField();
        txtMaSV = new javax.swing.JTextField();
        txtHoTen = new javax.swing.JTextField();
        txt = new javax.swing.JTextField();
        txtGPA = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        buttonThem = new javax.swing.JButton();
        buttonXoa = new javax.swing.JButton();
        buttonHienThi = new javax.swing.JButton();
        buttonCapNhat = new javax.swing.JButton();
        buttonReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        danhSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "MaSV", "HoTen", "Lop", "GPA"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        danhSach.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) { 
                    int selectedRow = danhSach.getSelectedRow(); 
                    if (selectedRow != -1) { 
                  
                        String maSV = danhSach.getValueAt(selectedRow, 0).toString(); 
                        String hoTen = danhSach.getValueAt(selectedRow, 1).toString(); 
                        String lop = danhSach.getValueAt(selectedRow, 2).toString(); 
                        String gpa = danhSach.getValueAt(selectedRow, 3).toString(); 

                        // Đặt giá trị cho các JTextField
                        txtMaSV.setText(maSV);
                        txtHoTen.setText(hoTen);
                        txtLop.setText(lop);
                        txtGPA.setText(gpa);
                    }
                }
            }

        });
        
        
        jScrollPane1.setViewportView(danhSach);


        jLabel2.setText("MaSV");

        jLabel3.setText("Lop");

        jLabel4.setText("HoTen");

        jLabel5.setText("GPA");

        buttonThem.setText("Thêm");
        buttonThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonThemActionPerformed(evt);
            }
        });
        
        buttonXoa.setText("Xóa");
        buttonXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					buttonXoaActionPerformed(evt);
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        buttonHienThi.setText("Hiển thị");
        buttonHienThi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHienThiActionPerformed(evt);
            }
        });

        buttonCapNhat.setText("Cập nhật");
        buttonCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCapNhatActionPerformed(evt);
            }
        });

        buttonReset.setText("Reset");
        buttonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHoTen))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMaSV)))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtLop, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                            .addComponent(txtGPA))
                        .addGap(94, 94, 94))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonHienThi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonThem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonXoa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonCapNhat)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonReset))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(85, Short.MAX_VALUE))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(75, 75, 75)
                    .addComponent(txt, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(430, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(txtGPA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonHienThi)
                    .addComponent(buttonThem)
                    .addComponent(buttonXoa)
                    .addComponent(buttonCapNhat)
                    .addComponent(buttonReset))
                .addGap(0, 114, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(248, Short.MAX_VALUE)
                    .addComponent(txt, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(169, 169, 169)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void buttonThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonXoaActionPerformed
    	String maSV = txtMaSV.getText();
    	String ten = txtHoTen.getText();
    	String lop = txtLop.getText();
    	String gpa = txtGPA.getText();
    	if(maSV.isEmpty() || ten.isEmpty()  || lop.isEmpty() || gpa.isEmpty()) {
    		JOptionPane.showMessageDialog(null, "Thông tin không được trống. Vui lòng điền đầy đủ", "Thông báo", JOptionPane.WARNING_MESSAGE);
    		return;
    	}
        if (ConnectorDB.isMaSinhVienExist(maSV)) {
        	JOptionPane.showMessageDialog(null, "Mã sinh viên đã tồn tại. Vui lòng nhập mã khác.", "Thông báo", JOptionPane.WARNING_MESSAGE);
        	txtMaSV.setText("");
        	return;
        }
        try {
        	double diem = Double.parseDouble(gpa);
        } catch(NumberFormatException e) {
        	JOptionPane.showMessageDialog(null, "Điểm GPA phải nhập dạng số!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        	txtGPA.setText("");
        	return;
        }
    	
    	SinhVien sv = new SinhVien(maSV, ten, lop, Double.parseDouble(gpa));
    	ConnectorDB.addDSSinhVien(sv);
    	hienThiTable();
    }
    
    private void buttonHienThiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonXoaActionPerformed
		hienThiTable();
    }
    
    private void buttonXoaActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_buttonXoaActionPerformed
    	int selectedRow = danhSach.getSelectedRow();
    	if (selectedRow != -1) {
    		int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa sinh viên này?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
    	    
    	    if (confirm == JOptionPane.YES_OPTION) {
    	        String maSinhVien = (String) danhSach.getValueAt(selectedRow, 0); // Lấy mã sinh viên từ dòng đã chọn
    	        ConnectorDB.deleteSinhVien(maSinhVien);     
    	        JOptionPane.showMessageDialog(null, "Sinh viên đã được xóa.");
    	    } 
    	}
    	else {
    		JOptionPane.showMessageDialog(null, "Vui lòng chọn một sinh viên!");
    	}
    	hienThiTable();
    }

    private void buttonCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCapNhatActionPerformed
    	int selectedRow = danhSach.getSelectedRow();
    	if (selectedRow != -1) {
    		String maSinhVien = (String) danhSach.getValueAt(selectedRow, 0);
    		String maSV = txtMaSV.getText();
    		String ten = txtHoTen.getText();
	    	String lop = txtLop.getText();
	    	String gpa = txtGPA.getText();
	    	if(maSV.isEmpty() || ten.isEmpty() || lop.isEmpty() || gpa.isEmpty()) {
	    		JOptionPane.showMessageDialog(null, "Thông tin không được trống. Vui lòng điền đầy đủ", "Thông báo", JOptionPane.WARNING_MESSAGE);
	    		return;
	    	}
	    	
	    
	    	int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn cập nhật sinh viên này?", "Xác nhận cập nhật", JOptionPane.YES_NO_OPTION);
    		
    	    if (confirm == JOptionPane.YES_OPTION) {
    	    	SinhVien sv = new SinhVien(maSV, ten, lop, Double.parseDouble(gpa));
    	        ConnectorDB.updateSinhVien(sv);    
    	        hienThiTable();
    	        JOptionPane.showMessageDialog(null, "Sinh viên đã được cập nhật.");
    	    }
    	}
    	else {
    		JOptionPane.showMessageDialog(null, "Vui lòng chọn một sinh viên!");
    	}
    	
    }

    private void buttonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonXoaActionPerformed
    	txtMaSV.setText("");
    	txtHoTen.setText("");
    	txtLop.setText("");
    	txtGPA.setText("");
    }

    private void hienThiTable() {
    	ArrayList<SinhVien> dsSinhVien = ConnectorDB.getDSSinhVien();

        DefaultTableModel model = (DefaultTableModel) danhSach.getModel();
        model.setRowCount(0);

        for (SinhVien sv : dsSinhVien) {
            model.addRow(new Object[]{sv.getMaSinhVien(), sv.getHoTen(), sv.getLop(), sv.getGpa()});
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            	View view = new View(); 
                view.setVisible(true); 
                view.setLocationRelativeTo(null);
                view.hienThiTable();   
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonThem;
    private javax.swing.JButton buttonXoa;
    private javax.swing.JButton buttonHienThi;
    private javax.swing.JButton buttonCapNhat;
    private javax.swing.JButton buttonReset;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable danhSach;
    private javax.swing.JTextField txtLop;
    private javax.swing.JTextField txtMaSV;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txt;
    private javax.swing.JTextField txtGPA;
    // End of variables declaration//GEN-END:variables
}
